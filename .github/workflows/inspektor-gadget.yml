name: Compile Inspektor Gadget
on:
  push:
  schedule:
    - cron: '0 2 * * *' # Night builds at 02:00

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code
      uses: actions/checkout@v1

    - name: Build binaries for the gadget container image
      run: |
        make -C gadget-container gadget-container-deps

    - name: Build gadget container and publish to Registry
      id: publish-registry
      uses: elgohr/Publish-Docker-Github-Action@2.8
      with:
        name: docker.io/kinvolk/gadget
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        workdir: gadget-container
        dockerfile: gadget.Dockerfile
        snapshot: true
        cache: ${{ github.event_name != 'schedule' }}

    - name: Build Inspektor Gadget
      run: |
        IMAGE_TAG=${{steps.publish-registry.outputs.snapshot-tag}} make kubectl-gadget

        # Prepare assets for release and artifact

        mkdir linux-amd64
        cp kubectl-gadget-linux-amd64 linux-amd64/kubectl-gadget
        cp LICENSE linux-amd64/
        tar --sort=name --owner=root:0 --group=root:0 \
          -czf kubectl-gadget-linux-amd64.tar.gz -C linux-amd64 \
          kubectl-gadget LICENSE

        mkdir darwin-amd64
        cp kubectl-gadget-darwin-amd64 darwin-amd64/kubectl-gadget
        cp LICENSE darwin-amd64/
        tar --sort=name --owner=root:0 --group=root:0 \
          -czf kubectl-gadget-darwin-amd64.tar.gz -C darwin-amd64 \
          kubectl-gadget LICENSE


    - name: Unit tests
      run: |
        make test

    - name: Smoke test build of the dev image for minikube
      run: |
        mkdir ../traceloop
        touch ../traceloop/traceloop
        MINIKUBE=true make -C gadget-container/ docker-gadget/minikube-build

    - name: Upload linux-amd64 artifact
      uses: actions/upload-artifact@v1
      with:
        name: kubectl-gadget-linux-amd64
        path: kubectl-gadget-linux-amd64.tar.gz

    - name: Upload darwin-amd64 artifact
      uses: actions/upload-artifact@v1
      with:
        name: kubectl-gadget-darwin-amd64
        path: kubectl-gadget-darwin-amd64.tar.gz

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

    - name: Upload linux-amd64 Release Asset
      id: upload-release-asset-linux-amd64
      uses: actions/upload-release-asset@v1.0.1
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: kubectl-gadget-linux-amd64.tar.gz
        asset_name: kubectl-gadget-linux-amd64.tar.gz
        asset_content_type: application/gzip

    - name: Upload darwin-amd64 Release Asset
      id: upload-release-asset-darwin-amd64
      uses: actions/upload-release-asset@v1.0.1
      if: startsWith(github.ref, 'refs/tags/v')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: kubectl-gadget-darwin-amd64.tar.gz
        asset_name: kubectl-gadget-darwin-amd64.tar.gz
        asset_content_type: application/gzip
